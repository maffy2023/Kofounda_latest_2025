name: Deploy Kofounda

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm globally
        run: npm install -g pnpm@8
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build application
        run: pnpm build

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ACR
        uses: docker/login-action@v1
        with:
          registry: kofounda.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            kofounda.azurecr.io/kofounda:latest
            kofounda.azurecr.io/kofounda:${{ github.sha }}

      - name: Deploy to VM
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Get the first VM instance from the resource group
            VM_NAME=$(az vm list -g zeustek_general_resource_group --query "[0].name" -o tsv)
            
            if [ -z "$VM_NAME" ]; then
              echo "No VM instances found in the resource group. Trying to deploy directly to a specific VM."
              # Deploy to a specific VM if known
              az vm run-command invoke \
                --resource-group zeustek_general_resource_group \
                --name Kofounda \
                --command-id RunShellScript \
                --scripts "docker pull kofounda.azurecr.io/kofounda:latest && docker run -d --name kofounda-app --restart always -p 80:3000 kofounda.azurecr.io/kofounda:latest"
            else
              echo "Found VM instance: $VM_NAME. Deploying to this VM."
              # Deploy to the found VM
              az vm run-command invoke \
                --resource-group zeustek_general_resource_group \
                --name $VM_NAME \
                --command-id RunShellScript \
                --scripts "docker pull kofounda.azurecr.io/kofounda:latest && docker run -d --name kofounda-app --restart always -p 80:3000 kofounda.azurecr.io/kofounda:latest"
            fi 