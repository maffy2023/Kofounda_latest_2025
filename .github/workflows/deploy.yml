name: Deploy Kofounda

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build application
        run: pnpm build
        
      - name: Verify build
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi
        
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: kofounda.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: kofounda.azurecr.io/kofounda:latest,kofounda.azurecr.io/kofounda:${{ github.sha }}
          cache-from: type=registry,ref=kofounda.azurecr.io/kofounda:buildcache
          cache-to: type=registry,ref=kofounda.azurecr.io/kofounda:buildcache,mode=max
          
      - name: Deploy to VM Scale Set
        uses: azure/CLI@v1
        with:
          inlineScript: |
            set -e
            echo "Deploying to VM Scale Set..."
            az vmss run-command invoke \
              --resource-group zeustek_general_resource_group \
              --name Kofounda \
              --command-id RunShellScript \
              --scripts "cd /home/KofoundaServer/app && docker-compose pull && docker-compose up -d"
            
            # Verify deployment
            echo "Verifying deployment..."
            sleep 30
            curl -I http://51.8.24.11 || echo "Application might still be starting up" 