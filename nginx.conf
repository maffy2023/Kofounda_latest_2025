server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Basic configuration
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    client_max_body_size 100M;

    # CORS headers
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

    # Health check endpoint
    location /health {
        default_type application/json;
        return 200 '{"status":"ok"}';
    }
    
    # Handle API requests with JSON mocks
    location /api/models {
        default_type application/json;
        return 200 '{"models":[{"id":"claude-3-opus-20240229","name":"Claude 3 Opus","provider":"anthropic"},{"id":"claude-3-sonnet-20240229","name":"Claude 3 Sonnet","provider":"anthropic"},{"id":"gpt-4","name":"GPT-4","provider":"openai"}]}';
    }
    
    location /api/chat {
        default_type application/json;
        return 200 '{"message":"Chat API placeholder"}';
    }
    
    location /api/health {
        default_type application/json;
        return 200 '{"status":"API is healthy"}';
    }
    
    # Default API response
    location /api/ {
        default_type application/json;
        return 200 '{"status":"API is running"}';
    }

    # Serve static files
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Better error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
} 